// <auto-generated />
using System;
using Ef6CoreForPosgreSQL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Xpog.Migrations
{
    [DbContext(typeof(ExpenseAppContext))]
    [Migration("20200613193136_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Xpog.Enitities.Expenses.CurrentExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ExpenseDataId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseDataId");

                    b.HasIndex("UserId");

                    b.ToTable("CurrentExpenses");
                });

            modelBuilder.Entity("Xpog.Enitities.Expenses.MonthlyExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ExpenseDataId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TriggeringDateOfMonth")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseDataId");

                    b.HasIndex("UserId");

                    b.ToTable("MonthlyExpenses");
                });

            modelBuilder.Entity("Xpog.Enitities.Expenses.RepeatableExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ExpenseDataId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("daysToTrigger")
                        .HasColumnType("integer");

                    b.Property<int>("timeToRepeatInDays")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseDataId");

                    b.HasIndex("UserId");

                    b.ToTable("RepeatableExpenses");
                });

            modelBuilder.Entity("Xpog.Entities.ExpenseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExpenseDatas");
                });

            modelBuilder.Entity("Xpog.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Xpog.Enitities.Expenses.CurrentExpense", b =>
                {
                    b.HasOne("Xpog.Entities.ExpenseData", "ExpenseData")
                        .WithMany()
                        .HasForeignKey("ExpenseDataId");

                    b.HasOne("Xpog.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Xpog.Enitities.Expenses.MonthlyExpense", b =>
                {
                    b.HasOne("Xpog.Entities.ExpenseData", "ExpenseData")
                        .WithMany()
                        .HasForeignKey("ExpenseDataId");

                    b.HasOne("Xpog.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Xpog.Enitities.Expenses.RepeatableExpense", b =>
                {
                    b.HasOne("Xpog.Entities.ExpenseData", "ExpenseData")
                        .WithMany()
                        .HasForeignKey("ExpenseDataId");

                    b.HasOne("Xpog.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
